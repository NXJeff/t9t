/*
 * Copyright (c) 2012 - 2018 Arvato Systems GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import api.*
import apiw.*
import t9t.base.types.*
import t9t.base.output.*

import t9t.base.crud.*
import t9t.base.search.*

/** BPM API module.
 * RTTI values in range 600-699
 *
 * Assigned values are:
 * 601 - ProcessDefinition
 * 602 - ProcessExecutionStatusDTO
 */
package (com.arvatosystems) t9t.bpmn {
    default private unsigned trim noControlChars;
    properties inherited, active, length,
        tenantCategory is com.arvatosystems.t9t.annotations.TenantCategory(),
        searchprefix is com.arvatosystems.t9t.annotations.SearchPrefix(),
        serialized is com.arvatosystems.t9t.annotations.StoreSerialized,
        noAutoMap is com.arvatosystems.t9t.annotations.NoAutoMap,
        notupdatable is com.arvatosystems.t9t.annotations.NotUpdatable,
        dropdown is com.arvatosystems.t9t.annotations.UseDropDownInUI(),
        ref is com.arvatosystems.t9t.annotations.IsObjectRef;

    type processDefinitionId is t9tShortId;

    class ProcessDefinitionRef RTTI 601 extends Ref {

    }

    final class ProcessDefinitionKey extends ProcessDefinitionRef {
        required processDefinitionId                    processDefinitionId;    // the key which defines the process. This does NOT contain any tenant part
    }

    class ProcessDefinitionDTO extends ProcessDefinitionRef {
        properties tenantCategory="D";
        required processDefinitionId                    processDefinitionId properties notupdatable; // the key which defines the process. This does NOT contain any tenant part
        required boolean                                isActive            properties active;
        required shortText                              name;
        optional defaultExternalId                      factoryName;           // @Named qualifier for the workflow target object factory
        optional Json                                   initialParams;         // if blank, the empty map
        required (T9tWorkflow...)                       workflow  properties serialized, length="60000";
        required boolean                                alwaysRestartAtStep1;  // fortytwo compatibility: ignore current position and always restart at the first step
        required boolean                                useExclusiveLock;      // if true, a lock of the factory defined lock object will be obtained during execution
        optional Ascii(8)                               engine;                // uses the internal state machine if blank
        optional Long                                   jvmLockTimeoutInMillis; //JVM locks not set will use the default 5000 ms
    }

    abstract class T9tAbstractWorkflowStep {
        required defaultExternalId                      label;
        optional shortText                              comment;
    }

    final class T9tWorkflowStepJavaTask extends T9tAbstractWorkflowStep {
        required defaultExternalId                      stepName;     // Jdp qualifier of the workflow step
    }

    final class T9tWorkflowStepAddParameters extends T9tAbstractWorkflowStep {
        required Json                                   parameters;   // Jdp qualifier of the workflow step
    }

    final class T9tWorkflowStepGoto extends T9tAbstractWorkflowStep {
        required defaultExternalId                      toLabel;
    }

    final class T9tWorkflowStepYield extends T9tAbstractWorkflowStep {
        required int                                    waitSeconds;  // 0 means continue immediately
    }

    class T9tWorkflow {
        required (T9tAbstractWorkflowStep...) required List<> steps;
    }



    // workflow status:
    class ProcessExecutionStatusRef extends Ref {}

    /** Status for a specific process concerning an individual object. */
    final class ProcessExecutionStatusKey extends ProcessExecutionStatusRef {
        required processDefinitionId                    processDefinitionId;        // the process ID
        required f42Ref                                 targetObjectRef;            // 1:1 long key of masterdata or transaction data
    }

    class ProcessExecutionStatusDTO RTTI 602 extends ProcessExecutionStatusRef {
        required processDefinitionId                    processDefinitionId properties notupdatable, dropdown="processDefinitionId";        // the process ID
        required f42Ref                                 targetObjectRef     properties notupdatable;// 1:1 long key of masterdata or transaction data
        optional Instant                                yieldUntil;         // if not null, then the task will not restart before this instant has been reached
        optional defaultExternalId                      nextStep;           // if not null, then the task will not start at the beginning, but at this step
        optional Json                                   currentParameters;  // the current task parameters, assigned when execution begins
        optional Integer                                returnCode;         // execution return code (same as for requests)
        optional Unicode(2048) allowControlChars        errorDetails;       // description of the error
    }
}
